<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>대화형 도서 대여 관리 프로그램</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">
    <!-- Chosen Palette: Warm Neutrals -->
    <!-- Application Structure Plan: A tab-based dashboard simulating the Excel environment. Users can switch between 'Dashboard', 'Book List', 'Member List', and 'Rental/Return' views. This structure was chosen because it directly mimics the multi-sheet system of the source Excel guide, making it intuitive for users to understand the relationships between different data sets. Interactive forms for renting/returning books provide a hands-on experience, while dynamic charts and stats offer immediate visual feedback, transforming a static guide into an engaging learning tool. -->
    <!-- Visualization & Content Choices: 
        - Overall Stats (Total Books, Members, On Loan): Goal=Inform, Method=Dynamic Text Cards, Interaction=Real-time updates, Justification=Provides a quick overview of the library's status.
        - Book/Member Lists: Goal=Organize, Method=Interactive HTML Tables, Interaction=Search/Filter, Justification=Allows easy data lookup, simulating Excel's filter functionality.
        - Rental/Return Log: Goal=Change/Track, Method=Interactive HTML Table with Forms, Interaction=Users can add new rentals and process returns, Justification=This is the core interactive component, simulating the primary function of the Excel program.
        - Book Status Chart: Goal=Compare, Method=Chart.js Doughnut Chart, Interaction=Updates on rental/return actions, Justification=Visually represents the proportion of available vs. loaned books.
        - Rentals by Book Chart: Goal=Compare, Method=Chart.js Bar Chart, Interaction=Updates with new rentals, Justification=Shows book popularity at a glance.
        - All dynamic updates (e.g., auto-filling names, changing status) simulate Excel formulas (VLOOKUP, IF, COUNTIF) to teach their practical application.
        Library/Method: Tailwind CSS, Vanilla JS, Chart.js (Canvas). -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body { font-family: 'Noto Sans KR', sans-serif; }
        .tab-active { border-color: #3b82f6; color: #3b82f6; background-color: #eff6ff; }
        .tab-inactive { border-color: transparent; }
        .chart-container { position: relative; width: 100%; max-width: 500px; margin-left: auto; margin-right: auto; height: 300px; max-height: 350px; }
        @media (min-width: 768px) { .chart-container { height: 350px; } }
        .table-wrp { max-height: 400px; overflow-y: auto; }
    </style>
</head>
<body class="bg-slate-50 text-slate-800">

    <div class="container mx-auto p-4 md:p-8">
        <header class="text-center mb-8">
            <h1 class="text-3xl md:text-4xl font-bold text-slate-900">대화형 도서 대여 관리 프로그램</h1>
            <p class="mt-2 text-slate-600">엑셀 가이드 기반의 도서 관리 시스템 시뮬레이션</p>
        </header>

        <div class="bg-white p-4 sm:p-6 rounded-2xl shadow-lg">
            
            <div class="border-b border-slate-200 mb-6">
                <nav class="flex flex-wrap -mb-px" id="nav-tabs">
                     <button data-tab="dashboard" class="nav-tab tab-active text-sm sm:text-base font-medium text-center p-3 sm:p-4 border-b-2 rounded-t-lg">📊 대시보드</button>
                    <button data-tab="rent-return" class="nav-tab tab-inactive text-sm sm:text-base font-medium text-center p-3 sm:p-4 border-b-2 rounded-t-lg">🔄 대여/반납</button>
                    <button data-tab="books" class="nav-tab tab-inactive text-sm sm:text-base font-medium text-center p-3 sm:p-4 border-b-2 rounded-t-lg">📚 도서 목록</button>
                    <button data-tab="members" class="nav-tab tab-inactive text-sm sm:text-base font-medium text-center p-3 sm:p-4 border-b-2 rounded-t-lg">👥 회원 명부</button>
                </nav>
            </div>

            <main id="main-content">
                
                <div id="dashboard-content" class="tab-content">
                    <div class="mb-6">
                        <h2 class="text-xl font-bold text-slate-800 mb-1">현황 요약</h2>
                        <p class="text-slate-500">현재 도서관의 주요 지표를 실시간으로 확인합니다.</p>
                    </div>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-center mb-8">
                        <div class="bg-blue-50 p-4 rounded-xl">
                            <h3 class="text-sm font-bold text-blue-600">총 도서</h3>
                            <p id="total-books-stat" class="text-3xl font-bold text-blue-800"></p>
                        </div>
                        <div class="bg-green-50 p-4 rounded-xl">
                            <h3 class="text-sm font-bold text-green-600">대여 가능</h3>
                            <p id="available-books-stat" class="text-3xl font-bold text-green-800"></p>
                        </div>
                        <div class="bg-amber-50 p-4 rounded-xl">
                            <h3 class="text-sm font-bold text-amber-600">대여중</h3>
                            <p id="on-loan-stat" class="text-3xl font-bold text-amber-800"></p>
                        </div>
                        <div class="bg-indigo-50 p-4 rounded-xl">
                            <h3 class="text-sm font-bold text-indigo-600">총 회원</h3>
                            <p id="total-members-stat" class="text-3xl font-bold text-indigo-800"></p>
                        </div>
                    </div>

                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <div>
                             <h2 class="text-xl font-bold text-slate-800 mb-1 text-center">도서 상태 현황</h2>
                             <p class="text-slate-500 mb-4 text-center">대여 가능 및 대여중인 도서의 비율을 보여줍니다.</p>
                            <div class="chart-container">
                                <canvas id="bookStatusChart"></canvas>
                            </div>
                        </div>
                        <div>
                             <h2 class="text-xl font-bold text-slate-800 mb-1 text-center">도서별 대여 횟수</h2>
                             <p class="text-slate-500 mb-4 text-center">가장 많이 대여된 도서를 확인할 수 있습니다.</p>
                            <div class="chart-container">
                                <canvas id="rentalsByBookChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="rent-return-content" class="tab-content hidden">
                    <div class="mb-6">
                        <h2 class="text-xl font-bold text-slate-800 mb-1">도서 대여하기</h2>
                        <p class="text-slate-500">새로운 대여 기록을 추가합니다. 도서번호와 회원번호를 선택하면 이름이 자동으로 입력됩니다. (VLOOKUP 시뮬레이션)</p>
                    </div>
                    <form id="rental-form" class="grid grid-cols-1 md:grid-cols-4 gap-4 items-end bg-slate-50 p-4 rounded-lg mb-8">
                        <div>
                            <label for="rental-book-id" class="block text-sm font-medium text-slate-700">도서번호</label>
                            <select id="rental-book-id" class="mt-1 block w-full rounded-md border-slate-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"></select>
                        </div>
                        <div>
                            <label for="rental-member-id" class="block text-sm font-medium text-slate-700">회원번호</label>
                            <select id="rental-member-id" class="mt-1 block w-full rounded-md border-slate-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"></select>
                        </div>
                        <div>
                            <label for="rental-date" class="block text-sm font-medium text-slate-700">대여일</label>
                            <input type="date" id="rental-date" class="mt-1 block w-full rounded-md border-slate-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        </div>
                        <button type="submit" class="w-full bg-blue-600 text-white font-bold py-2 px-4 rounded-md hover:bg-blue-700 transition-colors">대여 등록</button>
                    </form>
                    
                    <div class="mb-6">
                        <h2 class="text-xl font-bold text-slate-800 mb-1">대여/반납 기록</h2>
                        <p class="text-slate-500">'반납' 버튼을 누르면 오늘 날짜로 반납 처리됩니다.</p>
                    </div>
                    <div class="table-wrp border border-slate-200 rounded-lg">
                        <table class="min-w-full divide-y divide-slate-200">
                            <thead class="bg-slate-50 sticky top-0">
                                <tr>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">대여일</th>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">도서명</th>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">회원이름</th>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">반납예정일</th>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">상태</th>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">처리</th>
                                </tr>
                            </thead>
                            <tbody id="rental-log-body" class="bg-white divide-y divide-slate-200">
                            </tbody>
                        </table>
                    </div>
                </div>

                <div id="books-content" class="tab-content hidden">
                     <div class="mb-6">
                        <h2 class="text-xl font-bold text-slate-800 mb-1">도서 목록</h2>
                        <p class="text-slate-500">'대여상태'는 대여/반납 기록에 따라 실시간으로 자동 업데이트됩니다. (COUNTIF + IF 함수 시뮬레이션)</p>
                    </div>
                    <div class="mb-4">
                        <input type="text" id="book-search" placeholder="도서명 또는 저자로 검색..." class="block w-full md:w-1/2 rounded-md border-slate-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    </div>
                    <div class="table-wrp border border-slate-200 rounded-lg">
                        <table class="min-w-full divide-y divide-slate-200">
                            <thead class="bg-slate-50 sticky top-0">
                                <tr>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">도서번호</th>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">도서명</th>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">저자</th>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">대여상태</th>
                                </tr>
                            </thead>
                            <tbody id="book-list-body" class="bg-white divide-y divide-slate-200">
                            </tbody>
                        </table>
                    </div>
                </div>
                
                <div id="members-content" class="tab-content hidden">
                    <div class="mb-6">
                        <h2 class="text-xl font-bold text-slate-800 mb-1">회원 명부</h2>
                         <p class="text-slate-500">전체 회원 목록을 관리합니다.</p>
                    </div>
                     <div class="mb-4">
                        <input type="text" id="member-search" placeholder="이름 또는 연락처로 검색..." class="block w-full md:w-1/2 rounded-md border-slate-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    </div>
                    <div class="table-wrp border border-slate-200 rounded-lg">
                        <table class="min-w-full divide-y divide-slate-200">
                            <thead class="bg-slate-50 sticky top-0">
                                <tr>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">회원번호</th>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">이름</th>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">연락처</th>
                                    <th class="px-4 py-3 text-left text-xs font-bold text-slate-500 uppercase tracking-wider">가입일</th>
                                </tr>
                            </thead>
                            <tbody id="member-list-body" class="bg-white divide-y divide-slate-200">
                            </tbody>
                        </table>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            
            let books = [
                { id: 'B-001', title: '엑셀 데이터 분석', author: '김하나', publisher: '오피스' },
                { id: 'B-002', title: '파이썬 완전 정복', author: '박코딩', publisher: '이지스' },
                { id: 'B-003', title: '맛있는 디자인 포토샵', author: '이디자인', publisher: '한빛미디어' },
                { id: 'B-004', title: '처음 시작하는 SQL', author: '최데이터', publisher: '데이터북스' },
                { id: 'B-005', title: '웹 표준의 정석', author: '고웹진', publisher: '인사이트' }
            ];

            let members = [
                { id: 'M-001', name: '이지은', phone: '010-1234-5678', joinDate: '2025-01-05' },
                { id: 'M-002', name: '김철수', phone: '010-9876-5432', joinDate: '2025-02-11' },
                { id: 'M-003', name: '박영희', phone: '010-5555-4444', joinDate: '2025-03-20' }
            ];

            let rentals = [
                { logId: 1, bookId: 'B-002', memberId: 'M-001', rentalDate: '2025-07-01', returnDate: null },
                { logId: 2, bookId: 'B-001', memberId: 'M-003', rentalDate: '2025-07-03', returnDate: '2025-07-10' }
            ];

            const tabs = document.querySelectorAll('.nav-tab');
            const tabContents = document.querySelectorAll('.tab-content');
            
            const rentalForm = document.getElementById('rental-form');
            const rentalBookIdSelect = document.getElementById('rental-book-id');
            const rentalMemberIdSelect = document.getElementById('rental-member-id');
            const rentalDateInput = document.getElementById('rental-date');

            let bookStatusChart, rentalsByBookChart;
            
            const isBookOnLoan = (bookId) => {
                return rentals.some(r => r.bookId === bookId && r.returnDate === null);
            };

            const getBookById = (id) => books.find(b => b.id === id);
            const getMemberById = (id) => members.find(m => m.id === id);

            const renderBookList = (filter = '') => {
                const tbody = document.getElementById('book-list-body');
                tbody.innerHTML = '';
                const lowercasedFilter = filter.toLowerCase();
                const filteredBooks = books.filter(book => 
                    book.title.toLowerCase().includes(lowercasedFilter) || 
                    book.author.toLowerCase().includes(lowercasedFilter)
                );

                filteredBooks.forEach(book => {
                    const onLoan = isBookOnLoan(book.id);
                    const statusClass = onLoan ? 'text-amber-600 bg-amber-100' : 'text-green-600 bg-green-100';
                    const statusText = onLoan ? '대여중' : '대여가능';
                    const row = `
                        <tr>
                            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-700">${book.id}</td>
                            <td class="px-4 py-3 whitespace-nowrap text-sm font-medium text-slate-900">${book.title}</td>
                            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-700">${book.author}</td>
                            <td class="px-4 py-3 whitespace-nowrap text-sm"><span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${statusClass}">${statusText}</span></td>
                        </tr>
                    `;
                    tbody.innerHTML += row;
                });
            };

            const renderMemberList = (filter = '') => {
                const tbody = document.getElementById('member-list-body');
                tbody.innerHTML = '';
                 const lowercasedFilter = filter.toLowerCase();
                const filteredMembers = members.filter(member => 
                    member.name.toLowerCase().includes(lowercasedFilter) || 
                    member.phone.includes(filter)
                );

                filteredMembers.forEach(member => {
                    const row = `
                        <tr>
                            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-700">${member.id}</td>
                            <td class="px-4 py-3 whitespace-nowrap text-sm font-medium text-slate-900">${member.name}</td>
                            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-700">${member.phone}</td>
                            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-700">${member.joinDate}</td>
                        </tr>
                    `;
                    tbody.innerHTML += row;
                });
            };

            const renderRentalLog = () => {
                const tbody = document.getElementById('rental-log-body');
                tbody.innerHTML = '';
                rentals.sort((a, b) => new Date(b.rentalDate) - new Date(a.rentalDate));
                rentals.forEach(rental => {
                    const book = getBookById(rental.bookId);
                    const member = getMemberById(rental.memberId);
                    if (!book || !member) return;

                    const dueDate = new Date(rental.rentalDate);
                    dueDate.setDate(dueDate.getDate() + 15);
                    const dueDateString = dueDate.toISOString().split('T')[0];

                    const isReturned = rental.returnDate !== null;
                    const statusText = isReturned ? '반납완료' : '대여중';
                    const statusClass = isReturned ? 'text-slate-500' : 'text-amber-600 font-bold';
                    const buttonHtml = isReturned ? 
                        `<span class="text-sm text-slate-400">${rental.returnDate}</span>` :
                        `<button data-log-id="${rental.logId}" class="return-btn bg-blue-100 text-blue-700 hover:bg-blue-200 text-xs font-bold py-1 px-3 rounded-full">반납</button>`;

                    const row = `
                        <tr>
                            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-700">${rental.rentalDate}</td>
                            <td class="px-4 py-3 whitespace-nowrap text-sm font-medium text-slate-900">${book.title}</td>
                            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-700">${member.name}</td>
                            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-700">${dueDateString}</td>
                            <td class="px-4 py-3 whitespace-nowrap text-sm ${statusClass}">${statusText}</td>
                            <td class="px-4 py-3 whitespace-nowrap text-sm">${buttonHtml}</td>
                        </tr>
                    `;
                    tbody.innerHTML += row;
                });
                
                document.querySelectorAll('.return-btn').forEach(btn => {
                    btn.addEventListener('click', handleReturn);
                });
            };

            const populateRentalForm = () => {
                rentalBookIdSelect.innerHTML = '<option value="">도서 선택...</option>';
                books.forEach(book => {
                    if (!isBookOnLoan(book.id)) {
                        rentalBookIdSelect.innerHTML += `<option value="${book.id}">${book.title} (${book.id})</option>`;
                    }
                });

                rentalMemberIdSelect.innerHTML = '<option value="">회원 선택...</option>';
                members.forEach(member => {
                    rentalMemberIdSelect.innerHTML += `<option value="${member.id}">${member.name} (${member.id})</option>`;
                });
                
                rentalDateInput.value = new Date().toISOString().split('T')[0];
            };
            
            const handleReturn = (e) => {
                const logId = parseInt(e.target.dataset.logId, 10);
                const rental = rentals.find(r => r.logId === logId);
                if (rental) {
                    rental.returnDate = new Date().toISOString().split('T')[0];
                    updateAll();
                }
            };

            const renderStats = () => {
                const onLoanCount = rentals.filter(r => r.returnDate === null).length;
                document.getElementById('total-books-stat').textContent = books.length;
                document.getElementById('available-books-stat').textContent = books.length - onLoanCount;
                document.getElementById('on-loan-stat').textContent = onLoanCount;
                document.getElementById('total-members-stat').textContent = members.length;
            };

            const renderCharts = () => {
                const onLoanCount = rentals.filter(r => r.returnDate === null).length;
                const availableCount = books.length - onLoanCount;

                const statusCtx = document.getElementById('bookStatusChart').getContext('2d');
                if (bookStatusChart) bookStatusChart.destroy();
                bookStatusChart = new Chart(statusCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['대여 가능', '대여중'],
                        datasets: [{
                            data: [availableCount, onLoanCount],
                            backgroundColor: ['#22c55e', '#f59e0b'],
                            borderColor: '#ffffff',
                            borderWidth: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: { legend: { position: 'bottom' } }
                    }
                });
                
                const rentalsByBookData = books.map(book => {
                    return {
                        title: book.title,
                        count: rentals.filter(r => r.bookId === book.id).length
                    };
                }).filter(b => b.count > 0).sort((a,b) => b.count - a.count);

                const rentalsCtx = document.getElementById('rentalsByBookChart').getContext('2d');
                if (rentalsByBookChart) rentalsByBookChart.destroy();
                rentalsByBookChart = new Chart(rentalsCtx, {
                    type: 'bar',
                    data: {
                        labels: rentalsByBookData.map(b => b.title),
                        datasets: [{
                            label: '총 대여 횟수',
                            data: rentalsByBookData.map(b => b.count),
                            backgroundColor: '#3b82f6',
                            borderRadius: 4
                        }]
                    },
                    options: {
                        indexAxis: 'y',
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: { legend: { display: false } },
                         scales: {
                            x: { suggestedMax: Math.max(...rentalsByBookData.map(b => b.count), 5) }
                         }
                    }
                });
            };
            
            function updateAll() {
                renderBookList(document.getElementById('book-search').value);
                renderMemberList(document.getElementById('member-search').value);
                renderRentalLog();
                populateRentalForm();
                renderStats();
                renderCharts();
            }

            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    tabs.forEach(t => {
                        t.classList.remove('tab-active');
                        t.classList.add('tab-inactive');
                    });
                    tab.classList.add('tab-active');
                    tab.classList.remove('tab-inactive');

                    tabContents.forEach(content => content.classList.add('hidden'));
                    document.getElementById(`${tab.dataset.tab}-content`).classList.remove('hidden');
                });
            });

            rentalForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const bookId = rentalBookIdSelect.value;
                const memberId = rentalMemberIdSelect.value;
                const rentalDate = rentalDateInput.value;

                if (!bookId || !memberId || !rentalDate) {
                    alert('모든 필드를 채워주세요.');
                    return;
                }
                
                const newLogId = rentals.length > 0 ? Math.max(...rentals.map(r => r.logId)) + 1 : 1;
                rentals.push({
                    logId: newLogId,
                    bookId,
                    memberId,
                    rentalDate,
                    returnDate: null
                });
                
                rentalForm.reset();
                updateAll();
            });

            document.getElementById('book-search').addEventListener('input', (e) => renderBookList(e.target.value));
            document.getElementById('member-search').addEventListener('input', (e) => renderMemberList(e.target.value));

            updateAll();
        });
    </script>

</body>
</html>
